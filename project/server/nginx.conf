events {} # handles Nginx's connections and worker configs. Empty for now. 
http {
    # upstream defines a group of backend servers Nginx can proxy request to
    # In Docker Compose, service names (app, api) automatically become DNS names inside the Docker network

    # Points to the app service in docker compose on port 3000 
    upstream frontend {
        server app:3000;
    }

    # Points to the api service on port 5000
    upstream backend {
        server api:5000;
    }

    # Defines a virtual server listeing on port 80
    # All routing rules are inside this block
    server {
        listen 80;

        # Routes all requests to '/' (like http://localhost/) to the frontend service
        location / {
            proxy_pass http://frontend; # Sends requests to the upstream frontend (app:3000)
            # proxy_set_header Passes along client info so the backend knows the real IP, host, protocol, etc
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Routes all requests to '/api/' (like http://localhost/api/tasks) to the backend service
        location /api/ {
            proxy_pass http://backend/; # Sends requests to api:5000.
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}